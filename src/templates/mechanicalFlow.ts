import { addKeyword } from "@builderbot/bot";
import { menuFlow } from "./menuFlow";

const mechanicalFlow = addKeyword(['mecanica_general'])
  .addAnswer(
    'Por favor selecciona un servicio:',
    { capture: false },
    async (ctx, { provider }) => {
      const list = {
        header: {
          type: "text",
          text: "Servicio mec√°nico TecniRacer"
        },
        body: {
          text: "¬øEn qu√© podemos ayudarte hoy?"
        },
        footer: {
          text: "‚úÖ Selecciona una opci√≥n"
        },
        action: {
          button: "Servicios",
          sections: [
            {
              title: "Sede Principal üîß",  // hasta 24¬†char
              rows: [
                { id: "PNDM98", title: "Cambio de aceite",      description: "En sede principal" },
                { id: "PNDM97", title: "Revisi√≥n de frenos",    description: "En sede principal" },
                { id: "PNDM96", title: "Diagn√≥stico electr√≥nico",description: "En sede principal" },
                { id: "PNDM95", title: "Revisi√≥n suspensi√≥n",    description: "En sede principal" },
              ],
            },
            {
              title: "Talleres Aliados üîß",
              rows: [
                { id: "DHH18", title: "Alineaci√≥n/balanceo",  description: "Tercerizado" },
                { id: "DHH19", title: "Latoner√≠a y pintura",   description: "Tercerizado" },
                { id: "DHH20", title: "Tapicer√≠a y cojiner√≠a", description: "Tercerizado" },
                { id: "DHH21", title: "Accesorios y lujos",   description: "Tercerizado" },
              ],
            },
            {
              title: "Otras opciones üîÑ",  // secci√≥n extra para navegaci√≥n
              rows: [
                { id: "volver_menu", title: "Volver al men√∫", description: "" },
                { id: "DHH22", title: "‚Ä¶M√°s servicios", description: "Ver m√°s opciones" },
              ],
            },
          ]
        }
      };
      await provider.sendList(ctx.from, list);
    }
  )
  .addAnswer(
    "", { capture: true },
    async (ctx, { flowDynamic, gotoFlow }) => {
      switch (ctx.id) {
        case "volver_menu":
          return gotoFlow(menuFlow);
        case "DHH22":
          // si puls√≥ ‚Äú‚Ä¶M√°s servicios‚Äù
          return gotoFlow(mechanicalFlow2);
        default:
          // tu l√≥gica actual de cita
          await flowDynamic(‚úÖ Has seleccionado *${ctx.body}*);
          await flowDynamic("¬øDeseas agendar una cita para este servicio?");
          // ‚Ä¶
          return gotoFlow(menuFlow);
      }
    }
  );

export { mechanicalFlow };
