import { addKeyword } from "@builderbot/bot";
import { menuFlow } from "./menuFlow";
import { mechanicalFlow2 } from "./mechanical/mechanicalFlow2";

const mechanicalFlow = addKeyword(["mecanica_general"])
  // 1) addAction envÃ­a la lista interactiva
  .addAction(async (ctx, { provider }) => {
    const list = {
      header: { type: "text", text: "Servicio mecÃ¡nico TecniRacer" },
      body:   { text: "Â¿En quÃ© podemos ayudarte hoy?" },
      footer: { text: "âœ… Selecciona una opciÃ³n" },
      action: {
        button: "Servicios",
        sections: [
          {
            title: "Sede Principal ðŸ”§",
            rows: [
              { id: "PNDM98", title: "Cambio de aceite",        description: "En sede principal" },
              { id: "PNDM97", title: "RevisiÃ³n de frenos",      description: "En sede principal" },
              { id: "PNDM96", title: "DiagnÃ³stico electrÃ³nico", description: "En sede principal" },
              { id: "PNDM95", title: "RevisiÃ³n suspensiÃ³n",     description: "En sede principal" },
            ],
          },
          {
            title: "Talleres Aliados ðŸ”§",
            rows: [
              { id: "DHH18", title: "AlineaciÃ³n/balanceo",  description: "Tercerizado" },
              { id: "DHH19", title: "LatonerÃ­a y pintura",   description: "Tercerizado" },
              { id: "DHH20", title: "TapicerÃ­a y cojinerÃ­a", description: "Tercerizado" },
              { id: "DHH21", title: "Accesorios y lujos",   description: "Tercerizado" },
            ],
          },
          {
            title: "Otras opciones ðŸ”„",
            rows: [
              { id: "volver_menu", title: "Volver al menÃº",   description: "aaaa" },
              { id: "DHH22",      title: "â€¦MÃ¡s servicios",    description: "Ver mÃ¡s opciones" },
            ],
          },
        ],
      },
    };
    await provider.sendList(ctx.from, list);
  })
  // 2) addAnswer captura el click y redirige
  .addAnswer(
    "",              // captura cualquier texto, pero aquÃ­ viene el ctx.id de la lista
    { capture: true },
    async (ctx, { flowDynamic, gotoFlow }) => {
      const sel = ctx.id;
      if (sel === "volver_menu") {
        return gotoFlow(menuFlow);
      }
      if (sel === "DHH22") {
        return gotoFlow(mechanicalFlow2);
      }

      // cualquier otro servicio
      await flowDynamic(`âœ… Has seleccionado *${ctx.body}*`);
      await flowDynamic("Â¿Deseas agendar una cita para este servicio?");
      // aquÃ­ podrÃ­as: return gotoFlow(appointmentsFlow);
      return;
    }
  )
export { mechanicalFlow };
